---

- name: Instalación de una aplicación de DjangoCMS
  hosts: all
  connection: local

  vars:
    site_name: 'hmt_cms'
    root: '{{ playbook_dir | dirname }}'
    src_dir: '{{ root }}/src'
    settings_file: "{{ src_dir }}/{{ site_name }}/settings.py"
    apps_dir: '{{ settings_file | dirname }}/apps'
    requirements:
      base: "{{ root }}/requirements/base.txt"
      test: "{{ root }}/requirements/test.txt"
    Apps:
      hmt_shop:
        repo:
          url: "git@bitbucket.org:brmejia/hmt_shop.git"
          remote: 'origin'
          branch: 'master'
        force_pull: no

  tasks:

    # VENV
    - block:
      # ANSIBLE utilizará el VIRTUAL_ENV activo
      - name: Instalación de djangocms-installer
        pip: name=djangocms-installer state=present

      - name: Instalación de los requisitos del proyecto
        pip: requirements={{ requirements.base }}  state=present
      tags: venv

    # REPO
    - block:
      - name: Eliminar el directorio src existente
        file: path={{ src_dir }} state=absent
        tags: repo

      - name: Crear directorios del proyecto
        file: path={{ src_dir }} state=directory
        tags: repo

      - name: Copiando el archivo de configuración de DjangoCMS
        template: src=templates/djangocms.j2 dest={{ src_dir }}/djangocms.conf mode=755

      - name: Crear el projecto de DjangoCMS
        command: "djangocms --config-file djangocms.conf {{ site_name }}"
        args:
          chdir: "{{ src_dir }}"

      tags: cms

    # TODO: Sobrescribiendo el archivo de configuración de Django-CMS
    # template: src=templates/djangocms_settings.py dest={{ src_dir }}/{{ site_name }}/settings.py mode=755

    # APPS
    - block:
      - name: Crear directorio de apps
        file: path={{ apps_dir }} state=directory
      - name: añadir archivo __init__.py al directorio apps
        file: path={{ apps_dir }}/__init__.py state=touch

      # First, you have to add the ssh key to the repository service (e.g. github)
      - name: Haciendo pull del código de las aplicaciones
        git:
          repo: "{{ item.value.repo.url }}"
          dest: "{{ apps_dir }}/{{ item.key }}"
          accept_hostkey: True
          remote: "{{ item.value.repo.remote }}"
          version: "{{ item.value.repo.branch }}"
          force: "{{ item.value.force_pull | default('no') }}"
        with_dict: "{{ Apps }}"

      - name: Añadir aplicaciones al settings.py de Django
        replace: backup=yes  dest={{ settings_file }}  regexp="INSTALLED_APPS = \(((.|\n)*?)'\n\)"  replace="INSTALLED_APPS = (\1',\n    '{{ site_name }}.apps.{{ item.key }}'\n)"
        with_dict: "{{ Apps }}"
        notify:
          - makemigrations
          - migrate

      when: Apps is defined
      tags: apps

  handlers:
    - name: makemigrations
      command: "./manage.py makemigrations"
      args:
        chdir: "{{ src_dir }}"

    - name: migrate
      command: "./manage.py migrate"
      args:
        chdir: "{{ src_dir }}"

    # @todo: Crear superusuario
    # ./manage.py createsuperuser --username admin --email ""
