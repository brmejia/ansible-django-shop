---

- name: Deployment de una aplicación de DjangoShop
  hosts: all
  connection: local

  vars:
    site_name: 'hmt_cms'
    root: '{{ playbook_dir | dirname }}'
    venv: '{{ root }}/venv'
    dir: '{{ root }}/src'
    settings_file: "{{ dir }}/{{ site_name }}/settings.py"
    apps_dir: '{{ settings_file | dirname }}/apps'
    Apps:
      hmt_shop:
        repo:
          url: "git@bitbucket.org:brmejia/hmt_shop.git"
          remote: 'origin'
          branch: 'master'
        force_pull: no

  tasks:
    - name: Eliminar el directorio existente
      file: path={{ item }} state=absent
      with_items:
        - "{{ dir }}"

    - name: Crear directorios del proyecto
      file: path={{ item }} state=directory
      with_items:
        - "{{ venv }}"
        - "{{ dir }}"

    # Suponemos que el virtualenv ya está creado
    - name: Copiando el wrapper para python en el virtualenv
      template: src=templates/venv_exec.j2 dest={{ venv }}/exec mode=755

    - name: Copiando el archivo de configuración de DjangoCMS
      template: src=templates/djangocms.j2 dest={{ dir }}/djangocms.conf mode=755

    - name: Crear el projecto de DjangoCMS
      command: "{{ venv }}/exec djangocms --config-file djangocms.conf {{ site_name }}"
      args:
        chdir: "{{ dir }}"

    # - name: Sobrescribiendo el archivo de configuración de Django-CMS
    #   template: src=templates/djangocms_settings.py dest={{ dir }}/{{ site_name }}/settings.py mode=755

    - block:

      - name: Crear directorio de apps
        file: path={{ apps_dir }} state=directory

      # First, you have to add the ssh key to the repository service (e.g. github)
      - name: Haciendo pull del código de las aplicaciones
        git:
          repo: "{{ item.value.repo.url }}"
          dest: "{{ apps_dir }}/{{ item.key }}"
          accept_hostkey: True
          remote: "{{ item.value.repo.remote }}"
          version: "{{ item.value.repo.branch }}"
          force: "{{ item.value.force_pull | default('no') }}"
        with_dict: "{{ Apps }}"

      - name: Añadir aplicaciones al settings.py de Django
        replace: backup=yes  dest={{ settings_file }}  regexp="INSTALLED_APPS = \(((.|\n)*?)'\n\)"  replace="INSTALLED_APPS = (\1',\n    '{{ site_name }}.apps.{{ item.key }}'\n)"
        with_dict: "{{ Apps }}"

      when: Apps is defined


    - name: Actualizar migraciones de la base de datos
      command: "{{ venv }}/exec ./manage.py makemigrations"
      args:
        chdir: "{{ dir }}"

    - name: Aplicar cambios en la base de datos
      command: "{{ venv }}/exec ./manage.py migrate"
      args:
        chdir: "{{ dir }}"

    # @todo: Crear superusuario
    # ./manage.py createsuperuser --username admin --email ""
